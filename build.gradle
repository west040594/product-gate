plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'application'
	id 'com.bmuschko.docker-spring-boot-application' version '6.0.0'
}

import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer


group = 'com.tstu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.RC2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE')
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.springfox:springfox-swagger2:2.7.0'
	implementation 'io.springfox:springfox-swagger-ui:2.7.0'
	implementation 'org.modelmapper:modelmapper:1.1.0'
	implementation 'org.webjars:bootstrap:4.1.0'
	implementation 'org.webjars:jquery:3.3.1-1'
	compile files('libs/commons-0.6.5-SNAPSHOT.jar')
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}


application {
	mainClassName = 'com.tstu.productgate.ProductgateApplication'
}

jar {
	manifest {
		attributes 'Main-Class': 'com.tstu.productgate.ProductgateApplication'
	}

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:8-alpine'
		jvmArgs = ['-Dspring.profiles.active=docker', '-Xmx512m']
		ports = [8082]
	}
}

task createContainer(type: DockerCreateContainer, group: 'docker') {
	dependsOn dockerBuildImage
	targetImageId dockerBuildImage.getImageId()
	hostConfig.portBindings = ["8082:8082"]
}

task startContainer(type: DockerStartContainer, group: 'docker') {
	dependsOn createContainer
	targetContainerId createContainer.getContainerId()
}
